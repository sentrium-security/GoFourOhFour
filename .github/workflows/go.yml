name: Go

on:
  release:
    types: [created]

jobs:
  build-releases:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'

    - name: Build
      run: |
        mkdir -p bin
        go build -o bin/headers_${{ matrix.goos }}_${{ matrix.goarch }} ./

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: ${{ github.event.release.name }}
        body: ${{ github.event.release.body }}
        draft: false
        prerelease: false
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/headers_${{ matrix.goos }}_${{ matrix.goarch }}
        asset_name: headers_${{ matrix.goos }}_${{ matrix.goarch }}
        asset_content_type: application/octet-stream